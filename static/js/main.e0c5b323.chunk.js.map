{"version":3,"sources":["components/Button.jsx","components/Input.jsx","components/ClearButton.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","props","className","val","children","isNaN","onClick","addToInput","Input","input","ClearButton","handleClear","App","setState","state","FulfillEqual","math","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4VAOaA,EAAS,SAAAC,GAAK,OACvB,qBACAC,UAAS,0BANMC,EAOAF,EAAMG,SANbC,MAAMF,IAAe,MAAPA,GAAsB,MAARA,EAMI,WAAP,OAEjCG,QAAU,kBAAKL,EAAMM,WAAWN,EAAMG,WAJtC,SAMKH,EAAMG,WAXI,IAAAD,GCANK,G,MAAQ,SAACP,GAAD,OAAW,sBAAKC,UAAU,QAAf,UAAwBD,EAAMQ,MAA9B,SCAnBC,G,MAAc,SAACT,GAAD,OACvB,sBAAKC,UAAU,YAAYI,QAASL,EAAMU,YAA1C,cAA0DV,EAAMG,SAAhE,S,QCiEWQ,E,kDA3Db,WAAaX,GAAQ,IAAD,8BAClB,cAAMA,IAQVM,WAAa,SAAAJ,GACT,EAAKU,SAAU,CACbJ,MAAO,EAAKK,MAAML,MAAQN,KAXV,EAcpBY,aAAe,WACb,EAAKF,SAAU,CACbJ,MAAOO,IAAc,EAAKF,MAAML,UAblC,EAAKK,MAAQ,CACXL,MAAO,IAJS,E,0CAmBpB,WAAU,IAAD,OACN,OACG,qBAAKP,UAAU,MAAf,SACG,sBAAKA,UAAU,eAAf,UACE,cAAE,EAAF,CAAQO,MAAOQ,KAAKH,MAAML,QACzB,sBAAKP,UAAU,MAAf,UACC,cAAC,EAAD,CAAQK,WAAcU,KAAKV,WAA3B,eACA,cAAC,EAAD,CAAQA,WAAcU,KAAKV,WAA3B,eACA,cAAC,EAAD,CAAQA,WAAcU,KAAKV,WAA3B,eACA,cAAC,EAAD,CAAQA,WAAcU,KAAKV,WAA3B,kBAEA,sBAAKL,UAAU,MAAf,UACA,cAAC,EAAD,CAAQK,WAAcU,KAAKV,WAA3B,eACA,cAAC,EAAD,CAAQA,WAAcU,KAAKV,WAA3B,eACA,cAAC,EAAD,CAAQA,WAAcU,KAAKV,WAA3B,eACA,cAAC,EAAD,CAAQA,WAAcU,KAAKV,WAA3B,kBAEA,sBAAKL,UAAU,MAAf,UACA,cAAC,EAAD,CAAQK,WAAcU,KAAKV,WAA3B,eACA,cAAC,EAAD,CAAQA,WAAcU,KAAKV,WAA3B,eACA,cAAC,EAAD,CAAQA,WAAcU,KAAKV,WAA3B,eACA,cAAC,EAAD,CAAQA,WAAcU,KAAKV,WAA3B,kBAEA,sBAAKL,UAAU,MAAf,UACA,cAAC,EAAD,CAAQK,WAAcU,KAAKV,WAA3B,eACA,cAAC,EAAD,CAAQA,WAAcU,KAAKV,WAA3B,eACA,cAAC,EAAD,CAAQA,WAAc,kBAAM,EAAKQ,gBAAjC,eACA,cAAC,EAAD,CAAQR,WAAcU,KAAKV,WAA3B,kBAGA,qBAAKL,UAAU,MAAf,SACA,cAAC,EAAD,CAAaS,YAAa,kBAAM,EAAKE,SAAS,CAAEJ,MAAO,MAAvD,sF,GApDGS,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e0c5b323.chunk.js","sourcesContent":["import {React} from 'react';\r\nimport './Button.css';\r\n\r\nconst isOperator = val => {\r\n    return !isNaN(val) || val ===\".\" || val === \"=\";\r\n}\r\n\r\nexport const Button = props => (\r\n    <div \r\n    className={`button-wrapper ${\r\n        isOperator(props.children) ? null : \"operator\"\r\n    }`}  \r\n    onClick={ ()=> props.addToInput(props.children) }  \r\n    >\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\n","import { React } from 'react';\r\nimport './Input.css';\r\n\r\nexport const Input = (props) => <div className=\"input\">{props.input} </div> ;\r\n","import { React } from 'react';\r\nimport './ClearButton.css';\r\n\r\nexport const ClearButton = (props) => (\r\n    <div className=\"clear-btn\" onClick={props.handleClear} > {props.children} </div>\r\n)\r\n","import { React, Component  } from 'react';\nimport './App.css';\nimport {Button} from './components/Button';\nimport { Input } from './components/Input';\nimport { ClearButton } from './components/ClearButton';\nimport * as math from 'mathjs';\n\n\nclass App extends Component {\n\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      input: \"\" \n    };\n}\n  \n\naddToInput = val => {\n    this.setState ({\n      input: this.state.input + val  });\n  };\n\n  FulfillEqual = () => {\n    this.setState ({\n      input: math.evaluate(this.state.input)  });\n  };\n  \n  render (){\n     return (\n        <div className=\"app\">\n           <div className=\"calc-wrapper\">\n             < Input input={this.state.input}></Input>\n              <div className=\"row\">\n               <Button addToInput = {this.addToInput}>7</Button>\n               <Button addToInput = {this.addToInput}>8</Button>\n               <Button addToInput = {this.addToInput}>9</Button>\n               <Button addToInput = {this.addToInput}>/</Button>\n               </div>\n               <div className=\"row\">\n               <Button addToInput = {this.addToInput}>4</Button>\n               <Button addToInput = {this.addToInput}>5</Button>\n               <Button addToInput = {this.addToInput}>6</Button>\n               <Button addToInput = {this.addToInput}>*</Button>\n               </div>\n               <div className=\"row\">\n               <Button addToInput = {this.addToInput}>1</Button>\n               <Button addToInput = {this.addToInput}>2</Button>\n               <Button addToInput = {this.addToInput}>3</Button>\n               <Button addToInput = {this.addToInput}>+</Button>\n               </div>\n               <div className=\"row\">\n               <Button addToInput = {this.addToInput}>.</Button>\n               <Button addToInput = {this.addToInput}>0</Button>\n               <Button addToInput ={ () => this.FulfillEqual() }>=</Button>\n               <Button addToInput = {this.addToInput}>-</Button>\n               </div>\n\n               <div className=\"row\">\n               <ClearButton handleClear={() => this.setState({ input: \"\"})}>Clear/Очистить  (LVA)</ClearButton>\n               </div>\n           </div>  \n      </div>\n    \n    );\n   }\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}